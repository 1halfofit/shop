<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ujiuye.mapper.OrdersMapper">
    <resultMap id="BaseResultMap" type="com.ujiuye.bean.Orders">
        <id column="oid" jdbcType="VARCHAR" property="oid"/>
        <result column="ordertime" jdbcType="TIMESTAMP" property="ordertime"/>
        <result column="total" jdbcType="DOUBLE" property="total"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="telephone" jdbcType="VARCHAR" property="telephone"/>
        <result column="uid" jdbcType="VARCHAR" property="uid"/>
    </resultMap>
    <!--在订单详情的mapper文件中我们需要定义一个方法-->
    <resultMap id="newOrder" type="com.ujiuye.bean.Orders" extends="BaseResultMap">
        <collection property="" column="oid" ofType="com.ujiuye.bean.Orderitem"
                    select="com.ujiuye.mapper.OrderitemMapper.selectByoid"></collection>

    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    oid, ordertime, total, state, address, name, telephone, uid
  </sql>
    <select id="selectByExample" parameterType="com.ujiuye.bean.OrdersExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from orders
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from orders
        where oid = #{oid,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from orders
    where oid = #{oid,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.ujiuye.bean.OrdersExample">
        delete from orders
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ujiuye.bean.Orders">
        <!--<selectKey keyProperty="oid" keyColumn="oid" resultType="java.lang.String" order="AFTER">-->
            <!--select LAST_INSERT_ID();-->
        <!--</selectKey>-->
        insert into orders (oid,ordertime, total,
        state, address, name,
        telephone, uid)
        values (#{oid}, #{ordertime,jdbcType=TIMESTAMP}, #{total,jdbcType=DOUBLE},
        #{state,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{telephone,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.ujiuye.bean.Orders">
        insert into orders
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="oid != null">
                oid,
            </if>
            <if test="ordertime != null">
                ordertime,
            </if>
            <if test="total != null">
                total,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
            <if test="uid != null">
                uid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="oid != null">
                #{oid,jdbcType=VARCHAR},
            </if>
            <if test="ordertime != null">
                #{ordertime,jdbcType=TIMESTAMP},
            </if>
            <if test="total != null">
                #{total,jdbcType=DOUBLE},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ujiuye.bean.OrdersExample" resultType="java.lang.Long">
        select count(*) from orders
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update orders
        <set>
            <if test="record.oid != null">
                oid = #{record.oid,jdbcType=VARCHAR},
            </if>
            <if test="record.ordertime != null">
                ordertime = #{record.ordertime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.total != null">
                total = #{record.total,jdbcType=DOUBLE},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.telephone != null">
                telephone = #{record.telephone,jdbcType=VARCHAR},
            </if>
            <if test="record.uid != null">
                uid = #{record.uid,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update orders
        set oid = #{record.oid,jdbcType=VARCHAR},
        ordertime = #{record.ordertime,jdbcType=TIMESTAMP},
        total = #{record.total,jdbcType=DOUBLE},
        state = #{record.state,jdbcType=VARCHAR},
        address = #{record.address,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        telephone = #{record.telephone,jdbcType=VARCHAR},
        uid = #{record.uid,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ujiuye.bean.Orders">
        update orders
        <set>
            <if test="ordertime != null">
                ordertime = #{ordertime,jdbcType=TIMESTAMP},
            </if>
            <if test="total != null">
                total = #{total,jdbcType=DOUBLE},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=VARCHAR},
            </if>
        </set>
        where oid = #{oid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ujiuye.bean.Orders">
    update orders
    set ordertime = #{ordertime,jdbcType=TIMESTAMP},
      total = #{total,jdbcType=DOUBLE},
      state = #{state,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=VARCHAR}
    where oid = #{oid,jdbcType=VARCHAR}
  </update>


   <!--根据uid查询订单-->
    <select id="selectByUid" parameterType="java.lang.String" resultType="com.ujiuye.bean.Orders">
        select  * from  orders where  uid=#{uid}
    </select>


</mapper>